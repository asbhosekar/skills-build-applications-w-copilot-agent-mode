"""
Django settings for octofit_tracker project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ug@smv7q_4tzy2brlb(y9^por^!nx%^=u8mi8a&c8&%5#!an8o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost','127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'octofit_tracker.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'octofit_tracker.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- Dev helpers: enable REST, CORS and add Codespace preview host (development only) ---
try:
    INSTALLED_APPS += ["rest_framework", "corsheaders", "api"]
except NameError:
    INSTALLED_APPS = ["rest_framework", "corsheaders", "api"]

try:
    # put CorsMiddleware near the top of the stack
    MIDDLEWARE = ["corsheaders.middleware.CorsMiddleware"] + MIDDLEWARE
except NameError:
    MIDDLEWARE = ["corsheaders.middleware.CorsMiddleware"]

import os
codespace_name = os.environ.get("CODESPACE_NAME")
if codespace_name:
    try:
        ALLOWED_HOSTS.append(f"{codespace_name}-8000.app.github.dev")
    except NameError:
        ALLOWED_HOSTS = [f"{codespace_name}-8000.app.github.dev"]
else:
    try:
        ALLOWED_HOSTS += ["localhost", "127.0.0.1"]
    except NameError:
        ALLOWED_HOSTS = ["localhost", "127.0.0.1"]

# Development convenience only: allow all origins (remove/lock down for production)
CORS_ALLOW_ALL_ORIGINS = True
# --- end dev helpers ---

# --- Dev-only hosts & CORS helpers (safe append) ---
import os
codespace_name = os.environ.get("CODESPACE_NAME")
if codespace_name:
    try:
        ALLOWED_HOSTS.append(f"{codespace_name}-8000.app.github.dev")
    except NameError:
        ALLOWED_HOSTS = [f"{codespace_name}-8000.app.github.dev"]
else:
    try:
        ALLOWED_HOSTS += ["localhost", "127.0.0.1"]
    except NameError:
        ALLOWED_HOSTS = ["localhost", "127.0.0.1"]

# Allow all origins for local development (remove in production)
CORS_ALLOW_ALL_ORIGINS = True
# --- end dev-only helpers ---
